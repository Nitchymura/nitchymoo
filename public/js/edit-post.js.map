{"version":3,"names":[],"mappings":"","sources":["edit-post.js"],"sourcesContent":["//edit-post.js\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    const imageInput = document.getElementById('image');\r\n    const preview = document.getElementById('image-preview');\r\n    const userIcon = document.getElementById('image-icon');  // user-iconを取得\r\n    const deleteBtn = document.getElementById('delete-image');\r\n    const imageDeleted = document.getElementById('image-deleted');  // hiddenフィールドを取得\r\n\r\n    // 画像が選択された時にプレビュー表示\r\n    imageInput.addEventListener('change', function(event) {\r\n        const file = event.target.files[0];\r\n        if (!file) return;\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = function(e) {\r\n            preview.src = e.target.result;  // Base64データを設定\r\n            preview.style.display = 'block';  // プレビュー画像を表示\r\n            if (userIcon) userIcon.style.display = 'none';  // user-iconを非表示にする\r\n            imageDeleted.value = 'false';  // 画像が選ばれた場合、削除フラグをfalseに設定\r\n\r\n            // 画像選択後に削除ボタンを非表示にする\r\n            deleteBtn.style.display = 'none';  // 新たにファイルが選択されたらdeleteボタンを非表示\r\n        };\r\n        reader.readAsDataURL(file);  // 画像をBase64形式で読み込む\r\n    });\r\n\r\n    // 削除ボタンクリックで画像削除処理\r\n    deleteBtn.addEventListener('click', function () {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const id = window.location.pathname.split('/')[2]; // URLの2番目のパラメータ（ID）\r\n        // ローカル開発環境の場合はlocalhostにする\r\n        // fetch('http://127.0.0.1:8000/image/${id}/delete', {\r\n        fetch('https://nitchymoo-d0fdfc674f5d.herokuapp.com/image/${id}/delete', {   \r\n        method: \"DELETE\",\r\n            headers: {\r\n                \"X-CSRF-TOKEN\": document.querySelector('meta[name=\"csrf-token\"]').getAttribute(\"content\"),\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                preview.src = '';  // プレビュー画像をリセット\r\n                preview.style.display = 'none';  // プレビュー画像を非表示\r\n                if (userIcon) userIcon.style.display = 'block';  // user-iconを再表示\r\n                imageDeleted.value = 'true';  // 画像削除フラグをtrueに設定\r\n                deleteBtn.style.display = 'none';  // 削除後にdeleteボタンを非表示に設定\r\n                // inputタグの値をリセット（選択されたファイルを削除）\r\n                imageInput.value = ''; // inputのvalueを空にすることでファイル選択をリセット\r\n            } else {\r\n                alert('削除に失敗しました');\r\n            }\r\n        })\r\n        .catch(() => {\r\n            alert('通信エラーが発生しました');\r\n        });\r\n    });\r\n});"],"file":"edit-post.js"}